# 04_Day07_JavaEEWeb07

[TOC]

## 01_通用增删改的DButils

* 根据可变参数的参数个数进行遍历

```java
public static void update(String sql,Object...args ) {
		Connection conn=null;
		PreparedStatement ps=null;
		try {
			conn = JDBCInit.getConn();
			ps = conn.prepareStatement(sql);
			//这是根据参数数进行遍历的,不好,最好根据“?”个数进行遍历
			for (int i = 0; i < args.length; i++) {
				ps.setObject(i+1, args[i]);
			}
			//修改
			ps.executeUpdate();
			
		} catch (SQLException e) {
			
			e.printStackTrace();
		}finally {
			JDBCInit.Release(conn, ps);
		}
	}
```

* 元数据

    描述数据的数据 String sql,描述这份sql字符串的数据叫做元数据
    
    * 数据库元数据: DatabaseMetaData
        
    * 参数元数据 ParameterMetaData
        
    * 结果集合元数据 ResultSetMetaData

* 根据“?”个数进行遍历

```java
public static void update(String sql,Object...args ) {
		Connection conn=null;
		PreparedStatement ps=null;
		try {
			conn = JDBCInit.getConn();
			ps = conn.prepareStatement(sql);
			//获取有几个“?”,之所以知道有几个问好,是因为ps = conn.prepareStatement(sql);以及对“?”进行类校验
			ParameterMetaData metaData = ps.getParameterMetaData();
			//得到问号的数量
			int count = metaData.getParameterCount();
			for (int i = 0; i < count; i++) {
				ps.setObject(i+1, args[i]);
			}
			//修改
			ps.executeUpdate();
			
		} catch (SQLException e) {
			
			e.printStackTrace();
		}finally {
			JDBCInit.Release(conn, ps);
		}
	}
```

* 通用的查询方法(难点)

## 02_MVC设计模式

* JSP设计模式

![](https://i.loli.net/2019/02/19/5c6b764ad415c.png)

* 三层架构与MVC

![](https://i.loli.net/2019/02/19/5c6b78f1a690c.png)



    

